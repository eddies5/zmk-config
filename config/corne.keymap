/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define TAP_SHIFT(_name_,                   \
                  _bindings_)               \
_name_: tap_shift_##_name_ {                \
    compatible = "zmk,behavior-mod-morph";  \
    label = <_name_>;                       \
    bindings = <_bindings_>;                \
    #binding-cells = <0>;                   \
    mods = <(MOD_LSFT|MOD_RSFT)>;           \
};

/ {
    behaviors {
        TAP_SHIFT(lbrcs, <&kp LEFT_BRACKET> <&kp LEFT_BRACE>)
        TAP_SHIFT(rbrcs, <&kp RIGHT_BRACKET> <&kp RIGHT_BRACE>)
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Default Layer";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
            //                    | GUI | LWR | RSE |   | ENT | SPC  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T    &kp Y    &kp U      &kp I      &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G    &kp H    &kp J      &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B    &kp N    &kp M      &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp LGUI  &mo 1  &mo 2    &kp RET  &kp SPACE  &kp RALT
            >;
        };

        lower_layer {
            display-name = "Lower Layer";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | [{  |     |     |     |     |      |
            // | SHFT |     |     |     |     |     |   | LFT | DWN |  UP | RGT |     |      |
            //                    | GUI |     |     |   | ENT | SPC | ALT |

            bindings = <
&kp ESCAPE  &kp N1        &kp N2        &kp N3        &kp N4        &kp N5          &kp N6   &kp N7     &kp N8    &kp N9        &kp N0     &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &lbrcs   &trans     &trans    &trans        &trans     &rbrcs
&kp LSHFT   &trans        &trans        &trans        &trans        &trans          &trans   &kp LEFT   &kp DOWN  &kp UP_ARROW  &kp RIGHT  &trans
                                        &kp LGUI      &trans        &trans          &kp RET  &kp SPACE  &kp RALT
            >;
        };

        raise_layer {
            display-name = "Raise Layer";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp EXCL  &kp AT  &kp HASH  &kp DLLR  &kp PRCNT    &kp CARET  &kp AMPS   &kp ASTRK  &kp LPAR  &kp RPAR  &kp BSPC
&kp LCTRL  &trans    &trans  &trans    &trans    &trans       &kp MINUS  &kp EQUAL  &kp LBKT   &kp RBKT  &kp BSLH  &kp GRAVE
&kp LSHFT  &trans    &trans  &trans    &trans    &trans       &kp UNDER  &kp PLUS   &kp LBRC   &kp RBRC  &kp PIPE  &kp TILDE
                             &kp LGUI  &trans    &trans       &kp RET    &kp SPACE  &kp RALT
            >;
        };
    };
};
